<?php
/**
 * @file stanford_sws.module
 *
 * @author (s)
 *         Shea McKinney / sherakama
 *
 * @description
 * This module provides helper functionality to the sws site within a site
 * feature.
 *
 *
 * @todo :::::::::::::::::::::::::::::::::::::::::::::::::::::::::
 *
 *  1. Implement $logo theme hook change
 *
 * :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
 *
 */

/**
 * Implements hook_help().
 */
function stanford_sws_help($path, $arg) {
  switch ($path) {
    // Main module help for the block module
    /*
     *case 'admin/help#block':
     *  return '<p>' . t('Blocks are boxes of content rendered into an area, or region, of a web page. The default theme Bartik, for example, implements the regions "Sidebar first", "Sidebar second", "Featured", "Content", "Header", "Footer", etc., and a block may appear in any one of these areas. The <a href="@blocks">blocks administration page</a> provides a drag-and-drop interface for assigning a block to a region, and for controlling the order of blocks within regions.', array('@blocks' => url('admin/structure/block'))) . '</p>';
     */
    case 'admin/help#sws':
      return '<p>' . t('For more help please contact stanford web services: %email', array('%email' => 'admin@stanford.edu')) . '</p>';
  }
}

/**
 * Implements hook_perm().
 */
function stanford_sws_perm() {
  return array(
    'administer site within a site',
    );
}

/**
 * Implements hook_preprocess().
 */
function stanford_sws_preprocess_page(&$variables, $hook) {

  /*
    Check to see if this page is a node. If so apply subtheme by node reference
   */
  if(isset($variables["#node"])) {
    $node = $variables['#node'];

    if(_lookup_subsite_reference_by_node($node)) {
        stanford_sws_apply_subsite($node);
    }

    return;
  } // end if node//

  /*
    If the page being viewed is not a node then check the path
  */

  $request_path = request_path();
  $parent_site = _lookup_subsite_reference_by_path($path);

}

/**
 * _lookup_subsite_reference_by_node()
 * @param $node - The currently being viewed node object
 * @return  boolen - True if this node has a subsite / False if none
 */

function _lookup_subsite_reference_by_node($node) {

  return false;
}

/**
 * _lookup_subsite_reference_by_path
 * @param  $path - String - The currently viewed url path
 * @return Mixed - A node object of the subsite node or false if none
 */

function _lookup_subsite_reference_by_path($path) {

  return false;
}
