<?php
/**
 * @file
 * stanford_subsites_admin_dash.module
 *
 * @author (s)
 *         Shea McKinney / sherakama
 *
 * @todo :::::::::::::::::::::::::::::::::::::::::::::::::::::::::
 *
 *
 * :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
 */

// Load Helper Module
module_load_include('inc', 'stanford_subsites', 'stanford_subsites');


/**
 * Implements hook_help().
 */
function stanford_subsites_admin_dash_help($path, $arg) {
  switch ($path) {
    case 'admin/help#sws_admin_dash':
      return '<p>' . t('For more help please contact stanford web services: %email',
       array('%email' => 'help@stanford.edu')) . '</p>';
  }
  return;
}


/**
 * Implements hook_permission().
 */
function stanford_subsites_admin_dash_permission() {
  return array(
    'access sws admin dash' => array(
      'title' => t('Access Stanford Subsite Admin Dashboard'),
      'description' => t('See and use administration dashboard blocks'),
    ),
  );
}


/**
 * Implements hook_form_alter().
 */
function stanford_subsites_admin_dash_form_alter(&$form, &$form_state, $form_id) {
  // Alter code here

}

////////////////////////////////////////////////////////////////////////////////
// BLOCKS       ////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////

/**
 * Implements hook_block_info().
 */
function stanford_subsites_admin_dash_block_info() {

  $blocks['stanford_subsites_jump_block'] = array(
    'info' => t('Manage Subsites'),
    'cache' => DRUPAL_NO_CACHE,
 //   'region' => "dashboard_sidebar",
  );

  return $blocks;
}

/**
 * Implements hook_block_view().
 */
function stanford_subsites_admin_dash_block_view($delta = '') {
  $block = array();

  switch ($delta) {
    case 'stanford_subsites_jump_block':
      $block['subject'] = t('Manage Subsites');
      $block['content'] = drupal_get_form('stanford_subsites_admin_dash_jump_block_form');
      break;

  }
  return $block;
}

/**
 * stanford_subsites_admin_dash_jump_block_form
 * @return the jump block form array
 */

function stanford_subsites_admin_dash_jump_block_form() {
  $form = array();

  $options = array();
  $subsites = _get_subsite_nodes();
  foreach($subsites as $k => $node) {
    $options[$node->nid] = $node->title;
  }

  $form['subsites'] = array(
    '#type' => 'select',
    '#title' => t("Subsites"),
    '#options' => $options,
  );

  $operations = _get_jumpbox_operations();

  $form['operations'] = array(
    '#type' => 'select',
    '#title' => t("Actions"),
    '#options' => $operations,
  );

  $form['submit'] = array(
    '#type' =>  'submit',
    '#value' => t('Go'),
  );

  return $form;
}

/**
 * Get a list of dropdown options for the jumpbox functionality.
 * @return  array an associative array of fapi selection options
 */

function _get_jumpbox_operations() {
  return array(
    'edit_info' => t('Edit Info'),
    'view_users' => t('View Users'),
    'view_content' => t('View Content'),
  );
}


/**
 * validate function for stanford_subsites_admin_dash_jump_block_form
 */

function stanford_subsites_admin_dash_jump_block_form_validate($form, &$form_state) {
  $values = $form_state['values'];
  if(!is_numeric($values['subsites'])) {
    form_set_error('subsites', 'Invalid Subsite Selection');
  }

  $keys = _get_jumpbox_operations();
  if(!array_key_exists($values['operations'], $keys)) {
    form_set_error('operations', 'Invalid Action Selection');
  }

}

/**
 * Submit function for stanford_subsites_admin_dash_jump_block_form
 */

function stanford_subsites_admin_dash_jump_block_form_submit($form, &$form_state) {

  $values = $form_state['values'];
  switch($values['operations']) {
    case "edit_info":
      drupal_goto("node/".$values['subsites']."/edit");
    break;
    case "view_users":
      drupal_goto("admin/subsites/users/".$values['subsites']);
    break;
    case "view_content":
      drupal_goto("admin/subsites/content/".$values['subsites']);
    break;
  }

}


////////////////////////////////////////////////////////////////////////////////
// VIEWS ALTERS      ///////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////

/**
 * Implements hook_form_alter() on $form_id == "views_exposed_form"
 * Changes the subsite text field into a drop down
 * Also handles a page redirect to support both arguments and filters on subsite
 *
 */

function stanford_subsites_admin_dash_form_views_exposed_form_alter(&$form, &$form_state) {

  // Manage Content/Users Blocks & Pages
  if($form['#id'] == "views-exposed-form-stanford-sws-admin-dash-content-sws-admin-dash-content-block" ||
   $form['#id'] == "views-exposed-form-stanford-sws-admin-dash-content-sws-admin-dash-content-page" ||
   $form['#id'] == "views-exposed-form-stanford-sws-admin-dash-content-admin-dash-content-page-1" ||
   $form['#id'] == "views-exposed-form-stanford-sws-admin-dash-users-stanford-sws-admin-dash-user-block" ||
   $form['#id'] == "views-exposed-form-stanford-sws-admin-dash-users-stanford-sws-admin-dash-user-page" ||
   $form['#id'] == "views-exposed-form-stanford-sws-admin-dash-users-admin-dash-content-page-1") {

    $a3 = arg(3);   // /admin/subsites/content/###
                    // /admin/subsites/user/###


    $subsite_nodes = _get_subsite_nodes();
    $options = array('' => t('All')); // this needs to be blank or illegal
    foreach($subsite_nodes as $k => $node) {
      $options[$node->nid] = $node->title;
    }

    // Change the text input for subsite into a drop down select [CONTENT]
    if(isset($form['field_stanford_subsite_subsite_target_id'])) {
      $form['field_stanford_subsite_subsite_target_id']['#type'] = "select";
      $form['field_stanford_subsite_subsite_target_id']['#size'] = null;
      $form['field_stanford_subsite_subsite_target_id']['#options'] = $options;

      if(is_numeric($a3)) {
        $form['field_stanford_subsite_subsite_target_id']['#value'] = $a3;
      }

    }

    // Change the text input for subsite into a drop down select [USERS]
    if(isset($form['field_stanford_subsite_usr_sub_target_id'])) {
      $form['field_stanford_subsite_usr_sub_target_id']['#type'] = "select";
      $form['field_stanford_subsite_usr_sub_target_id']['#size'] = null;
      $form['field_stanford_subsite_usr_sub_target_id']['#options'] = $options;

      // if $a3 is numeric it is a nid. Set the value
      if(is_numeric($a3)) {
        $form['field_stanford_subsite_usr_sub_target_id']['#value'] = $a3;
      }

    }

    // if arg3 is numeric then redirect to base page
    if(is_numeric($a3)) {
      $form['#action'] = base_path().arg(0)."/".arg(1)."/".arg(2);
    }

  }

}





